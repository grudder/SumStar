@model SumStar.Models.ArticleContent

@{
    ViewBag.Title = "修改文章内容";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Edit", "ArticleContents", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
		@Html.HiddenFor(model => model.CategoryId)
		@Html.HiddenFor(model => model.CreateBy)
		
		<div class="form-group">
            @Html.LabelFor(model => model.Category, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				<input type="text" class="form-control text-box single-line" readonly="readonly" value="@Model.Category.Name" />
			</div>
		</div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DisplayOrder, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TopicImage, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
				@Html.HiddenFor(model => model.TopicImage)
				<img width="120" height="90" src="@Model.TopicImage" />
				<input type="file" id="topicImageFile" name="topicImageFile" accept="image/gif, image/jpeg, image/png" />
                @Html.ValidationMessageFor(model => model.TopicImage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Author, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
		        <!-- 加载编辑器的容器 -->
	            <script id="Content" name="Content" type="text/plain">@Html.Raw(Model.Content)</script>
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

		<div class="form-group">
            @Html.LabelFor(model => model.CreateByUser, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				<input type="text" class="form-control text-box single-line" readonly="readonly" value="@Model.CreateByUser.UserName" />
			</div>
		</div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateTime, new { htmlAttributes = new { @class = "form-control", @readonly= "readonly" } })
                @Html.ValidationMessageFor(model => model.CreateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
				<input type="submit" class="btn btn-primary" value="保存" />
				@Html.ActionLink("返回", "Index", "Contents", null, new {@class = "btn btn-default"})
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
	<script type="text/javascript" src="@Url.Content("~/Content/UEditor/ueditor.config.js")"></script>
	<script type="text/javascript" src="@Url.Content("~/Content/UEditor/ueditor.all.min.js")"></script>
	<script type="text/javascript">
		$(function () {
			var editor = UE.getEditor("Content", { initialFrameHeight: 400 });
		});
	</script>
}
